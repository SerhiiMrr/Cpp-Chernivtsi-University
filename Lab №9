#include <iostream>
#include <stdlib.h>
#include <time.h>

using namespace std;


int *p(int** A, int n)
{
    int i,j;
    int *p_arr = new int[n];
    for (i = 0; i < n; i++)
    {
        p_arr[i] = 1;
        for (int j = 0; j < n; j++)
        {
            p_arr[i] += A[i][j];
        }
    }
    return p_arr;
}
// camelCase,PascalCase,snake_case
int **sort_matrix_rows(int **A, int *p_arr, int n)
{
    int i,j,k;
    for ( i = n - 1; i >= 0; i--)
    {
        for ( j = 0; j < i; j++)
        {
            if (p_arr[j] < p_arr[j + 1])
            {
                swap(p_arr[j], p_arr[j + 1]);
                for ( k = 0; k < n; k++)
                {
                    swap(A[j] [k], A[j + 1] [k]);
                }
            }
        }
    }
    return A;
}
void output_onscreen_p(int **A, int n)
{
    int i;
    int *p_arr = new int[n];
    p_arr = p(A,n);
    for (int i = 0; i < n; i ++)
        cout << p_arr[i] << "\t";
    cout << endl;
    cout << endl;
}
int main()
{
    srand(time(NULL));
    int n,i,j;
    cout << "Enter number of colums and rows: ";
    cin >> n;;
    int ** A = new int * [n];
    for (i = 0; i < n; i++)
        A[i] = new int [n];
    for (i = 0; i < n; i++)
    {
        for (j = 0; j < n; j++)
        {
            A[i][j] = rand() % 9 + 1;
            cout << A[i][j]<< "\t" ;
        }
        cout << endl;
    }
	cout << endl;
    output_onscreen_p(A,n);
    A = sort_matrix_rows(A, p(A,n), n);
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            cout << A[i][j]<< "\t" ;
        }
        cout << endl;
    }
    cout << endl;
    output_onscreen_p(A,n);
    return 0;
}
